/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as McpRouteImport } from './routes/mcp'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SurahIndexRouteImport } from './routes/surah/index'
import { Route as SurahIdRouteImport } from './routes/surah/$id'
import { Route as ExampleChatRouteImport } from './routes/example.chat'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoStoreRouteImport } from './routes/demo.store'
import { Route as DemoMcpTodosRouteImport } from './routes/demo.mcp-todos'
import { Route as ApiTranslationsRouteImport } from './routes/api.translations'
import { Route as ApiSurahRouteImport } from './routes/api.surah'
import { Route as ApiSseRouteImport } from './routes/api.sse'
import { Route as ApiMessagesRouteImport } from './routes/api.messages'
import { Route as ApiMcpTodosRouteImport } from './routes/api.mcp-todos'
import { Route as ApiDemoTqTodosRouteImport } from './routes/api.demo-tq-todos'
import { Route as ApiDemoNamesRouteImport } from './routes/api.demo-names'
import { Route as ApiDemoChatRouteImport } from './routes/api.demo-chat'
import { Route as ExampleGuitarsIndexRouteImport } from './routes/example.guitars/index'
import { Route as ExampleGuitarsGuitarIdRouteImport } from './routes/example.guitars/$guitarId'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as ApiVersesChapterNumberRouteImport } from './routes/api.verses.$chapterNumber'

const McpRoute = McpRouteImport.update({
  id: '/mcp',
  path: '/mcp',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SurahIndexRoute = SurahIndexRouteImport.update({
  id: '/surah/',
  path: '/surah/',
  getParentRoute: () => rootRouteImport,
} as any)
const SurahIdRoute = SurahIdRouteImport.update({
  id: '/surah/$id',
  path: '/surah/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleChatRoute = ExampleChatRouteImport.update({
  id: '/example/chat',
  path: '/example/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoMcpTodosRoute = DemoMcpTodosRouteImport.update({
  id: '/demo/mcp-todos',
  path: '/demo/mcp-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTranslationsRoute = ApiTranslationsRouteImport.update({
  id: '/api/translations',
  path: '/api/translations',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSurahRoute = ApiSurahRouteImport.update({
  id: '/api/surah',
  path: '/api/surah',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSseRoute = ApiSseRouteImport.update({
  id: '/api/sse',
  path: '/api/sse',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiMessagesRoute = ApiMessagesRouteImport.update({
  id: '/api/messages',
  path: '/api/messages',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiMcpTodosRoute = ApiMcpTodosRouteImport.update({
  id: '/api/mcp-todos',
  path: '/api/mcp-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoTqTodosRoute = ApiDemoTqTodosRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoNamesRoute = ApiDemoNamesRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoChatRoute = ApiDemoChatRouteImport.update({
  id: '/api/demo-chat',
  path: '/api/demo-chat',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleGuitarsIndexRoute = ExampleGuitarsIndexRouteImport.update({
  id: '/example/guitars/',
  path: '/example/guitars/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleGuitarsGuitarIdRoute = ExampleGuitarsGuitarIdRouteImport.update({
  id: '/example/guitars/$guitarId',
  path: '/example/guitars/$guitarId',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiVersesChapterNumberRoute = ApiVersesChapterNumberRouteImport.update({
  id: '/api/verses/$chapterNumber',
  path: '/api/verses/$chapterNumber',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/mcp': typeof McpRoute
  '/api/demo-chat': typeof ApiDemoChatRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosRoute
  '/api/mcp-todos': typeof ApiMcpTodosRoute
  '/api/messages': typeof ApiMessagesRoute
  '/api/sse': typeof ApiSseRoute
  '/api/surah': typeof ApiSurahRoute
  '/api/translations': typeof ApiTranslationsRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/surah/$id': typeof SurahIdRoute
  '/surah': typeof SurahIndexRoute
  '/api/verses/$chapterNumber': typeof ApiVersesChapterNumberRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars': typeof ExampleGuitarsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/mcp': typeof McpRoute
  '/api/demo-chat': typeof ApiDemoChatRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosRoute
  '/api/mcp-todos': typeof ApiMcpTodosRoute
  '/api/messages': typeof ApiMessagesRoute
  '/api/sse': typeof ApiSseRoute
  '/api/surah': typeof ApiSurahRoute
  '/api/translations': typeof ApiTranslationsRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/surah/$id': typeof SurahIdRoute
  '/surah': typeof SurahIndexRoute
  '/api/verses/$chapterNumber': typeof ApiVersesChapterNumberRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars': typeof ExampleGuitarsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/mcp': typeof McpRoute
  '/api/demo-chat': typeof ApiDemoChatRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosRoute
  '/api/mcp-todos': typeof ApiMcpTodosRoute
  '/api/messages': typeof ApiMessagesRoute
  '/api/sse': typeof ApiSseRoute
  '/api/surah': typeof ApiSurahRoute
  '/api/translations': typeof ApiTranslationsRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/example/chat': typeof ExampleChatRoute
  '/surah/$id': typeof SurahIdRoute
  '/surah/': typeof SurahIndexRoute
  '/api/verses/$chapterNumber': typeof ApiVersesChapterNumberRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars/': typeof ExampleGuitarsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/mcp'
    | '/api/demo-chat'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/messages'
    | '/api/sse'
    | '/api/surah'
    | '/api/translations'
    | '/demo/mcp-todos'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/surah/$id'
    | '/surah'
    | '/api/verses/$chapterNumber'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/example/guitars/$guitarId'
    | '/example/guitars'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/mcp'
    | '/api/demo-chat'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/messages'
    | '/api/sse'
    | '/api/surah'
    | '/api/translations'
    | '/demo/mcp-todos'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/surah/$id'
    | '/surah'
    | '/api/verses/$chapterNumber'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/example/guitars/$guitarId'
    | '/example/guitars'
  id:
    | '__root__'
    | '/'
    | '/mcp'
    | '/api/demo-chat'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/messages'
    | '/api/sse'
    | '/api/surah'
    | '/api/translations'
    | '/demo/mcp-todos'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/example/chat'
    | '/surah/$id'
    | '/surah/'
    | '/api/verses/$chapterNumber'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/example/guitars/$guitarId'
    | '/example/guitars/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  McpRoute: typeof McpRoute
  ApiDemoChatRoute: typeof ApiDemoChatRoute
  ApiDemoNamesRoute: typeof ApiDemoNamesRoute
  ApiDemoTqTodosRoute: typeof ApiDemoTqTodosRoute
  ApiMcpTodosRoute: typeof ApiMcpTodosRoute
  ApiMessagesRoute: typeof ApiMessagesRoute
  ApiSseRoute: typeof ApiSseRoute
  ApiSurahRoute: typeof ApiSurahRoute
  ApiTranslationsRoute: typeof ApiTranslationsRoute
  DemoMcpTodosRoute: typeof DemoMcpTodosRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ExampleChatRoute: typeof ExampleChatRoute
  SurahIdRoute: typeof SurahIdRoute
  SurahIndexRoute: typeof SurahIndexRoute
  ApiVersesChapterNumberRoute: typeof ApiVersesChapterNumberRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
  ExampleGuitarsGuitarIdRoute: typeof ExampleGuitarsGuitarIdRoute
  ExampleGuitarsIndexRoute: typeof ExampleGuitarsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/mcp': {
      id: '/mcp'
      path: '/mcp'
      fullPath: '/mcp'
      preLoaderRoute: typeof McpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/surah/': {
      id: '/surah/'
      path: '/surah'
      fullPath: '/surah'
      preLoaderRoute: typeof SurahIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/surah/$id': {
      id: '/surah/$id'
      path: '/surah/$id'
      fullPath: '/surah/$id'
      preLoaderRoute: typeof SurahIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/chat': {
      id: '/example/chat'
      path: '/example/chat'
      fullPath: '/example/chat'
      preLoaderRoute: typeof ExampleChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/mcp-todos': {
      id: '/demo/mcp-todos'
      path: '/demo/mcp-todos'
      fullPath: '/demo/mcp-todos'
      preLoaderRoute: typeof DemoMcpTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/translations': {
      id: '/api/translations'
      path: '/api/translations'
      fullPath: '/api/translations'
      preLoaderRoute: typeof ApiTranslationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/surah': {
      id: '/api/surah'
      path: '/api/surah'
      fullPath: '/api/surah'
      preLoaderRoute: typeof ApiSurahRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/sse': {
      id: '/api/sse'
      path: '/api/sse'
      fullPath: '/api/sse'
      preLoaderRoute: typeof ApiSseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/messages': {
      id: '/api/messages'
      path: '/api/messages'
      fullPath: '/api/messages'
      preLoaderRoute: typeof ApiMessagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/mcp-todos': {
      id: '/api/mcp-todos'
      path: '/api/mcp-todos'
      fullPath: '/api/mcp-todos'
      preLoaderRoute: typeof ApiMcpTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/demo-chat': {
      id: '/api/demo-chat'
      path: '/api/demo-chat'
      fullPath: '/api/demo-chat'
      preLoaderRoute: typeof ApiDemoChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/guitars/': {
      id: '/example/guitars/'
      path: '/example/guitars'
      fullPath: '/example/guitars'
      preLoaderRoute: typeof ExampleGuitarsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/guitars/$guitarId': {
      id: '/example/guitars/$guitarId'
      path: '/example/guitars/$guitarId'
      fullPath: '/example/guitars/$guitarId'
      preLoaderRoute: typeof ExampleGuitarsGuitarIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/verses/$chapterNumber': {
      id: '/api/verses/$chapterNumber'
      path: '/api/verses/$chapterNumber'
      fullPath: '/api/verses/$chapterNumber'
      preLoaderRoute: typeof ApiVersesChapterNumberRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  McpRoute: McpRoute,
  ApiDemoChatRoute: ApiDemoChatRoute,
  ApiDemoNamesRoute: ApiDemoNamesRoute,
  ApiDemoTqTodosRoute: ApiDemoTqTodosRoute,
  ApiMcpTodosRoute: ApiMcpTodosRoute,
  ApiMessagesRoute: ApiMessagesRoute,
  ApiSseRoute: ApiSseRoute,
  ApiSurahRoute: ApiSurahRoute,
  ApiTranslationsRoute: ApiTranslationsRoute,
  DemoMcpTodosRoute: DemoMcpTodosRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ExampleChatRoute: ExampleChatRoute,
  SurahIdRoute: SurahIdRoute,
  SurahIndexRoute: SurahIndexRoute,
  ApiVersesChapterNumberRoute: ApiVersesChapterNumberRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
  ExampleGuitarsGuitarIdRoute: ExampleGuitarsGuitarIdRoute,
  ExampleGuitarsIndexRoute: ExampleGuitarsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
